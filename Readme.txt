Задание
1.	Спроектировать, реализовать на C++, протестировать и отладить первый из указанных необходимых классов отдельно от остальных
2.	Спроектировать, реализовать на C++ и протестировать полную версию программы
3.	Провести рефакторинг, превратив разработанную программу в библиотеку, пригодную для вызова из среды другого языка программирования
4.	Реализовать на языке Python или на другом высокоуровневом языке по выбору студента пользовательский интерфейс к библиотеке


№6. Обработка сигналов
Описание приложения
Приложение хранит временные ряды значений одномерных сигналов (цифровых и аналоговых). Цифровые и аналоговые сигналы обрабатываются одними и теми же операциями. Частота дискретизации всех сигналов приложения одна и та же и не изменяется в процессе работы.
Необходимые классы
Цифровой сигнал: объект содержит цифровой идентификатор сигнала, численные значения высокого и низкого уровней и массив, каждый элемент которого содержит длительность отрезка сигнала с одним значением (высоким или низким, начиная, например, с низкого); например, сигнал, имеющий низкий уровень 2 единицы времени и высокий уровень 4 единицы времени, будет закодирован массивом [2, 4]. Необходимо обеспечить выполнение операций получения значения сигнала в заданный момент с помощью оператора “круглые скобки” () и конкатенации 2 сигналов.
Аналоговый сигнал: объект содержит цифровой идентификатор сигнала, его длину и массив значений сигнала (например, [0.1, 0.3, -0.1, -0.2, 0.].
Хранилище сигналов: двусвязный кольцевой список (лёгкий вариант) либо 2-3 дерево (сложный вариант). Содержит описания сигналов. Должно поддерживать поиск сигнала максимальной длительности, а также максимального и минимального значения среди всех хранящихся сигналов.
Операция обработки пары сигналов: описание математического действия, позволяющего получить некоторый сигнал из двух других, например: суммирование, поиск максимального/минимального значения в каждый момент времени, отбрасывание значений вне выделенного диапазона.
Процесс обработки: набор операций, которые необходимо последовательно провести с сигналами из хранилища. Для каждой операции указываются идентификаторы входных сигналов и результата. Необходимо проверять корректность процесса обработки перед запуском и сообщать пользователю об ошибках, допущенных при составлении процесса.
